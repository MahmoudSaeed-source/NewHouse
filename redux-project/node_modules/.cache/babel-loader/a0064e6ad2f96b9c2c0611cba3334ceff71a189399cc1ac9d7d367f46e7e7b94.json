{"ast":null,"code":"import { createStore } from \"redux\"; // normal redux package\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\n\n// redux-toolkit\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = {\n  name: \"Auth\",\n  initialState: initialAuthState,\n  login(state) {\n    state.isAuthenticated = !state.isAuthenticated;\n  }\n};\n\n// redux-toolkit\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\n// // normal redux package\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"INCREMENT\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"INCREASE\") {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"DECREMENT\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"TOGGLE\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer); // normal redux package\n\nexport const counterActions = counterSlice.actions; // redux-toolkit\n\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","authSlice","login","store","reducer","counterActions","actions"],"sources":["/Users/macbook/Documents/Work/Tech/Web Dev/Studying/React/newCourseProjects/Done/10-Redux/redux-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\"; // normal redux package\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true };\nconst initialAuthState = { isAuthenticated: false };\n\n// redux-toolkit\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter += action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nconst authSlice = {\n  name: \"Auth\",\n  initialState: initialAuthState,\n  login(state) {\n    state.isAuthenticated = !state.isAuthenticated;\n  },\n};\n\n// redux-toolkit\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\n// // normal redux package\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"INCREMENT\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"INCREASE\") {\n//     return {\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"DECREMENT\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"TOGGLE\") {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n//   return state;\n// };\n// const store = createStore(counterReducer); // normal redux package\n\nexport const counterActions = counterSlice.actions; // redux-toolkit\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO,CAAC,CAAC;AACrC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAC7D,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;;AAEnD;AACA,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC/BQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAE;MACfA,KAAK,CAACT,OAAO,EAAE;IACjB,CAAC;IACDU,SAAS,CAACD,KAAK,EAAE;MACfA,KAAK,CAACT,OAAO,EAAE;IACjB,CAAC;IACDW,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACT,OAAO,IAAIY,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,aAAa,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMc,SAAS,GAAG;EAChBV,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9Bc,KAAK,CAACP,KAAK,EAAE;IACXA,KAAK,CAACN,eAAe,GAAG,CAACM,KAAK,CAACN,eAAe;EAChD;AACF,CAAC;;AAED;AACA,MAAMc,KAAK,GAAGnB,cAAc,CAAC;EAC3BoB,OAAO,EAAEd,YAAY,CAACc;AACxB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAAO,CAAC,CAAC;;AAEpD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}